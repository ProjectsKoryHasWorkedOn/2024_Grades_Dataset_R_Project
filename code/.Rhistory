demo()
print_factors(120)
print_factors <- function(x) {
print(paste("The factors of",x,"are:"))
for(i in 1:x) {
if((x %% i) == 0) {
print(i)
}
}
}
print_factors(120)
source("~/.active-rstudio-document", echo=TRUE)
Person
Person$say_hello
Person$say_hello()
say_hello()
Person$methods(say_hello)
Person
Person$say_hello
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
install.packages("methods")
install.packages("methods")
install.packages("methods")
install.packages("methods")
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
bob$getHello()
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
tryCatch(bob$getAge(),
error = function(e) {
cat("Error in getAge(): \n")
print(e)})
bob$getAge
source("~/.active-rstudio-document", echo=TRUE)
bob$hi
RCPersonAcc$hi()
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
bob <- RCPersonAcc$greet()
source("C:/Users/Certa/Desktop/test.R", echo=TRUE)
source("C:/Users/Certa/Desktop/test.R", echo=TRUE)
source("C:/Users/Certa/Desktop/test.R", echo=TRUE)
source("C:/Users/Certa/Desktop/test.R", echo=TRUE)
source("C:/Users/Certa/Desktop/test.R", echo=TRUE)
matrix
x
x
x
x <- rbind(c(1, 2, c(3, 4))
x
x
y <- matrix(c(1,2,3,4),nrow=2,ncol=2)
y
source("C:/Users/Certa/Desktop/r_quiz_w4/r_quiz.R", echo=TRUE)
source("C:/Users/Certa/Desktop/r_quiz_w4/r_quiz.R", echo=TRUE)
source("C:/Users/Certa/Desktop/r_quiz_w4/r_quiz.R", echo=TRUE)
source("C:/Users/Certa/Desktop/r_quiz_w4/r_quiz.R", echo=TRUE)
source("C:/Users/Certa/Desktop/r_quiz_w4/r_quiz.R", echo=TRUE)
RCPersonAcc <- setRefClass(Class = "RCPersonAcc",
fields = list(
givenName = "character",
familyName = "character",
emailAddress = "character",
yearOfBirth = "numeric"),
methods = list(
initialize = function() {
.self$greet()
},
greet = function() {
cat(paste0("Hello", ".\n"))
# return fails for
# return ("hello")
}
)
)
bob <- RCPersonAcc$new()
bob <- RCPersonAcc$accessors(c("givenName", "familyName", "emailAddress", "yearOfBirth"))
bob$setGivenName("Robert")
bob$setFamilyName("Miller")
bob$setEmailAddress("bob@miller.com")
bob$setYearOfBirth(1963)
cat("Family Name:   ", bob$getFamilyName(), "\n",
"Given Name:    ", bob$getGivenName(), "\n",
"Email address: ", bob$getEmailAddress(), "\n",
"Year of birth: ", bob$getYearOfBirth(), "\n")
bob <- RCPersonAcc$methods(sayMyNameIs = function() {
cat(paste0("My name is ", givenName, ".\n"))
}
)
bob$sayMyNameIs()
source("~/.active-rstudio-document", echo=TRUE)
# Instead of creating a class all at once:
Person <- setRefClass("Person", methods = list(
say_hello = function() message("Hi!")
))
# You can build it up piece-by-piece
Person <- setRefClass("Person")
Person$methods(say_hello = function() message("Hi!"))
library(aoos)
# Instead of creating a class all at once:
Person <- setRefClass("Person", methods = list(
say_hello = function() message("Hi!")
))
# You can build it up piece-by-piece
Person <- setRefClass("Person")
Person$methods(say_hello = function() message("Hi!"))
Person <- defineRefClass({
Class <- "person" # this is the argument 'Class' in setRefClass
personName <- "character" # this is a field of class 'character'
initialize <- function(name) {
.self$personName <- name
.self$greet()
}
greet <- function() {
cat(paste0("Hello, my name is ", .self$personName, ".\n"))
}
hi <- function() {
cat(paste0("Blah blah blah ", .self$personName, ".\n"))
}
})
ann <- Person("Ann")
ann$hi()
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
jane$sayMyNameIs
jane <- RCPersonAcc$new()
jane$setGivenName("Jane")
jane$sayMyNameIs
jane <- RCPersonAcc$new()
jane <- RCPersonAcc$accessors(c("givenName", "familyName", "emailAddress", "yearOfBirth"))
jane$setGivenName("Jane")
jane$setFamilyName("Argo")
jane$setEmailAddress("jano2@gmail.com")
jane$setYearOfBirth(2000)
jane$sayMyNameIs
jane <- RCPersonAcc$new()
jane <- RCPersonAcc$accessors(c("givenName", "familyName", "emailAddress", "yearOfBirth"))
jane$setGivenName("Jane")
jane$setFamilyName("Argo")
jane$setEmailAddress("jano2@gmail.com")
jane$setYearOfBirth(2000)
jane <- RCPersonAcc$methods(sayMyNameIs = function() {
cat(paste0("My name is ", givenName, ".\n"))
}
)
jane$sayMyNameIs
jane$sayMyNameIs
source("~/.active-rstudio-document", echo=TRUE)
RCPersonAcc <- setRefClass(Class = "RCPersonAcc",
fields = list(
givenName = "character",
familyName = "character",
emailAddress = "character",
yearOfBirth = "numeric"),
methods = list(
initialize = function() {
.self$greet()
},
greet = function() {
cat(paste0("Hello", ".\n"))
# return fails for
# return ("hello")
}
)
)
bob <- RCPersonAcc$new()
bob <- RCPersonAcc$accessors(c("givenName", "familyName", "emailAddress", "yearOfBirth"))
bob$setGivenName("Robert")
bob$setFamilyName("Miller")
bob$setEmailAddress("bob@miller.com")
bob$setYearOfBirth(1963)
cat("Family Name:   ", bob$getFamilyName(), "\n",
"Given Name:    ", bob$getGivenName(), "\n",
"Email address: ", bob$getEmailAddress(), "\n",
"Year of birth: ", bob$getYearOfBirth(), "\n")
bob <- RCPersonAcc$methods(sayMyNameIs = function() {
cat(paste0("My name is ", givenName, ".\n"))
}
)
bob$sayMyNameIs()
jane <- RCPersonAcc$new()
jane <- RCPersonAcc$accessors(c("givenName", "familyName", "emailAddress", "yearOfBirth"))
jane$setGivenName("Jane")
jane$setFamilyName("Argo")
jane$setEmailAddress("jano2@gmail.com")
jane$setYearOfBirth(2000)
jane <- RCPersonAcc$methods(sayMyNameIs = function() {
cat(paste0("My name is ", givenName, ".\n"))
}
)
jane$sayMyNameIs
jane <- RCPersonAcc$new()
jane$setGivenName("Jane")
jane$setFamilyName("Argo")
jane$setEmailAddress("jano2@gmail.com")
jane$setYearOfBirth(2000)
jane$sayMyNameIs
source("~/.active-rstudio-document", echo=TRUE)
RCPersonAcc <- setRefClass(Class = "RCPersonAcc",
fields = list(
givenName = "character",
familyName = "character",
emailAddress = "character",
yearOfBirth = "numeric"),
methods = list(
initialize = function() {
.self$greet()
},
greet = function() {
cat(paste0("Hello", ".\n"))
# return fails for
# return ("hello")
}
)
)
bob <- RCPersonAcc$new()
bob <- RCPersonAcc$accessors(c("givenName", "familyName", "emailAddress", "yearOfBirth"))
bob$setGivenName("Robert")
bob$setFamilyName("Miller")
bob$setEmailAddress("bob@miller.com")
bob$setYearOfBirth(1963)
cat("Family Name:   ", bob$getFamilyName(), "\n",
"Given Name:    ", bob$getGivenName(), "\n",
"Email address: ", bob$getEmailAddress(), "\n",
"Year of birth: ", bob$getYearOfBirth(), "\n")
bob <- RCPersonAcc$methods(sayMyNameIs = function() {
cat(paste0("My name is ", givenName, ".\n"))
}
)
bob$sayMyNameIs()
jane <- RCPersonAcc$new()
jane$setGivenName("Jane")
jane$setFamilyName("Argo")
jane$setEmailAddress("jano2@gmail.com")
jane$setYearOfBirth(2000)
jane$sayMyNameIs
jane <- RCPersonAcc$new()
jane$setGivenName("Jane")
jane$setFamilyName("Argo")
jane$setEmailAddress("jano2@gmail.com")
jane$setYearOfBirth(2000)
jane$sayMyNameIs()
RCPersonAcc <- setRefClass(
Class = "RCPersonAcc",
fields = list(
givenName = "character",
familyName = "character",
emailAddress = "character",
yearOfBirth = "numeric"
),
methods = list(
initialize = function(givenName, familyName, emailAddress, yearOfBirth) {
.self$givenName <- givenName
.self$familyName <- familyName
.self$emailAddress <- emailAddress
.self$yearOfBirth <- yearOfBirth
.self$greet()
},
greet = function() {
cat("Hello.\n")
},
sayMyNameIs = function() {
cat(paste0("My name is ", .self$givenName, ".\n"))
}
)
)
bob <- RCPersonAcc$new(
givenName = "Robert",
familyName = "Miller",
emailAddress = "bob@miller.com",
yearOfBirth = 1963
)
cat("Family Name:   ", bob$familyName, "\n",
"Given Name:    ", bob$givenName, "\n",
"Email address: ", bob$emailAddress, "\n",
"Year of birth: ", bob$yearOfBirth, "\n")
bob$greet()
bob$sayMyNameIs()
create_person <- function(givenName, familyName, emailAddress, yearOfBirth) {
list(
givenName = givenName,
familyName = familyName,
emailAddress = emailAddress,
yearOfBirth = yearOfBirth
)
}
print_person_info <- function(person_obj) {
cat(
"Hello, my name is",person_obj$givenName, person_obj$familyName, " ", "\n",
"Family Name:   ", person_obj$familyName, "\n",
"Given Name:    ", person_obj$givenName, "\n",
"Email address: ", person_obj$emailAddress, "\n",
"Year of birth: ", person_obj$yearOfBirth, "\n"
)
}
# Create a person object
bob <- create_person("Robert", "Miller", "bob@miller.com", 1963)
# Print the person's information
print_person_info(bob)
studentInfoTable <- OULADDataLoader$retrieveDataFromCSVFile(paste(csvDirectory, csvFileNames[4], sep = ""))
numberOfCombinations = n_distinct(addAGPAColumnBasedOnTheNewAssessmentWeighting$group_ids_together)
source("C:/Users/Certa/Desktop/projects/individual_project_r/code/oulad_dataset_code_part_2.R", echo=TRUE)
